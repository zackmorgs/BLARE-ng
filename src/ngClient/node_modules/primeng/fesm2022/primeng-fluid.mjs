import { CommonModule } from '@angular/common';
import * as i0 from '@angular/core';
import { Injectable, inject, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';
import { BaseComponent } from 'primeng/basecomponent';
import { BaseStyle } from 'primeng/base';

const theme = ({ dt }) => `
    .p-fluid{
        width:100%
    }
`;
const classes = {
    root: 'p-fluid'
};
class FluidStyle extends BaseStyle {
    name = 'fluid';
    classes = classes;
    theme = theme;
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.2.10", ngImport: i0, type: FluidStyle, deps: null, target: i0.ɵɵFactoryTarget.Injectable });
    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "19.2.10", ngImport: i0, type: FluidStyle });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.2.10", ngImport: i0, type: FluidStyle, decorators: [{
            type: Injectable
        }] });
/**
 *
 * Fluid is a layout component to make descendant components span full width of their container.
 *
 * [Live Demo](https://www.primeng.org/fluid/)
 *
 * @module fluidstyle
 *
 */
var FluidClasses;
(function (FluidClasses) {
    /**
     * Class name of the root element
     */
    FluidClasses["root"] = "p-fluid";
})(FluidClasses || (FluidClasses = {}));

/**
 * Fluid is a layout component to make descendant components span full width of their container.
 * @group Components
 */
class Fluid extends BaseComponent {
    _componentStyle = inject(FluidStyle);
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.2.10", ngImport: i0, type: Fluid, deps: null, target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "19.2.10", type: Fluid, isStandalone: true, selector: "p-fluid", host: { properties: { "class.p-fluid": "true" } }, providers: [FluidStyle], usesInheritance: true, ngImport: i0, template: ` <ng-content></ng-content> `, isInline: true, dependencies: [{ kind: "ngmodule", type: CommonModule }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.2.10", ngImport: i0, type: Fluid, decorators: [{
            type: Component,
            args: [{
                    selector: 'p-fluid',
                    template: ` <ng-content></ng-content> `,
                    standalone: true,
                    imports: [CommonModule],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    providers: [FluidStyle],
                    host: {
                        '[class.p-fluid]': 'true'
                    }
                }]
        }] });
class FluidModule {
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.2.10", ngImport: i0, type: FluidModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "19.2.10", ngImport: i0, type: FluidModule, imports: [Fluid], exports: [Fluid] });
    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "19.2.10", ngImport: i0, type: FluidModule, imports: [Fluid] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.2.10", ngImport: i0, type: FluidModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [Fluid],
                    exports: [Fluid]
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { Fluid, FluidClasses, FluidModule, FluidStyle };
//# sourceMappingURL=primeng-fluid.mjs.map
