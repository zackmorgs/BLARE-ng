{"version":3,"file":"primeng-picklist.mjs","sources":["../../src/picklist/style/pickliststyle.ts","../../src/picklist/picklist.ts","../../src/picklist/primeng-picklist.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BaseStyle } from 'primeng/base';\n\nconst theme = ({ dt }) => `\n.p-picklist {\n    display: flex;\n    gap: ${dt('picklist.gap')};\n}\n\n.p-picklist-controls {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: ${dt('picklist.controls.gap')};\n}\n\n.p-picklist-list-container {\n    flex: 1 1 50%;\n}\n\n.p-picklist .p-listbox {\n    height: 100%;\n}\n`;\n\nconst classes = {\n    root: 'p-picklist p-component',\n    sourceControls: 'p-picklist-controls p-picklist-source-controls',\n    sourceListContainer: 'p-picklist-list-container p-picklist-source-list-container',\n    transferControls: 'p-picklist-controls p-picklist-transfer-controls',\n    targetListContainer: 'p-picklist-list-container p-picklist-target-list-container',\n    targetControls: 'p-picklist-controls p-picklist-target-controls'\n};\n\n@Injectable()\nexport class PickListStyle extends BaseStyle {\n    name = 'picklist';\n\n    theme = theme;\n\n    classes = classes;\n}\n\n/**\n *\n * PickList is used to reorder items between different lists.\n *\n * [Live Demo](https://www.primeng.org/picklist)\n *\n * @module pickliststyle\n *\n */\n\nexport enum PickListClasses {\n    /**\n     * Class name of the root element\n     */\n    root = 'p-picklist',\n    /**\n     * Class name of the source controls element\n     */\n    sourceControls = 'p-picklist-source-controls',\n    /**\n     * Class name of the source list container element\n     */\n    sourceListContainer = 'p-picklist-source-list-container',\n    /**\n     * Class name of the transfer controls element\n     */\n    transferControls = 'p-picklist-transfer-controls',\n    /**\n     * Class name of the target list container element\n     */\n    targetListContainer = 'p-picklist-target-list-container',\n    /**\n     * Class name of the target controls element\n     */\n    targetControls = 'p-picklist-target-controls'\n}\n\nexport interface PickListStyle extends BaseStyle {}\n","import { CdkDragDrop, DragDropModule, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport {\n    AfterContentInit,\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgModule,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChild,\n    ViewEncapsulation,\n    booleanAttribute,\n    inject,\n    numberAttribute\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { find, findIndexInList, findSingle, isEmpty, scrollInView, setAttribute, uuid } from '@primeuix/utils';\nimport { FilterService, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { ButtonDirective, ButtonProps } from 'primeng/button';\nimport { AngleDoubleDownIcon, AngleDoubleLeftIcon, AngleDoubleRightIcon, AngleDoubleUpIcon, AngleDownIcon, AngleLeftIcon, AngleRightIcon, AngleUpIcon } from 'primeng/icons';\nimport { Listbox, ListboxFilterEvent } from 'primeng/listbox';\nimport { Ripple } from 'primeng/ripple';\nimport { Nullable, VoidListener } from 'primeng/ts-helpers';\nimport {\n    PickListFilterOptions,\n    PickListMoveAllToSourceEvent,\n    PickListMoveAllToTargetEvent,\n    PickListMoveToSourceEvent,\n    PickListMoveToTargetEvent,\n    PickListSourceFilterEvent,\n    PickListSourceReorderEvent,\n    PickListSourceSelectEvent,\n    PickListTargetFilterEvent,\n    PickListTargetReorderEvent,\n    PickListTargetSelectEvent\n} from './picklist.interface';\nimport { PickListStyle } from './style/pickliststyle';\n\n/**\n * PickList is used to reorder items between different lists.\n * @group Components\n */\n@Component({\n    selector: 'p-pickList, p-picklist, p-pick-list',\n    standalone: true,\n    imports: [CommonModule, ButtonDirective, Ripple, DragDropModule, AngleDoubleDownIcon, AngleDoubleLeftIcon, AngleDoubleRightIcon, AngleDoubleUpIcon, AngleDownIcon, AngleLeftIcon, AngleRightIcon, AngleUpIcon, Listbox, FormsModule, SharedModule],\n    template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"{ 'p-picklist p-component': true }\" cdkDropListGroup [attr.data-pc-name]=\"'picklist'\" [attr.data-pc-section]=\"'root'\">\n            <div class=\"p-picklist-controls p-picklist-source-controls\" *ngIf=\"showSourceControls\" [attr.data-pc-section]=\"'sourceControls'\" [attr.data-pc-group-section]=\"'controls'\">\n                <button\n                    type=\"button\"\n                    [attr.aria-label]=\"moveUpAriaLabel\"\n                    pButton\n                    pRipple\n                    severity=\"secondary\"\n                    class=\"p-button-icon-only\"\n                    [disabled]=\"sourceMoveDisabled()\"\n                    (click)=\"moveUp(sourcelist, source, selectedItemsSource, onSourceReorder, SOURCE_LIST)\"\n                    [attr.data-pc-section]=\"'sourceMoveUpButton'\"\n                    [buttonProps]=\"getButtonProps('moveup')\"\n                >\n                    <AngleUpIcon *ngIf=\"!moveUpIconTemplate && !_moveUpIconTemplate\" [attr.data-pc-section]=\"'moveupicon'\" />\n                    <ng-template *ngTemplateOutlet=\"moveUpIconTemplate || _moveUpIconTemplate\"></ng-template>\n                </button>\n                <button\n                    type=\"button\"\n                    [attr.aria-label]=\"moveTopAriaLabel\"\n                    pButton\n                    pRipple\n                    severity=\"secondary\"\n                    class=\"p-button-icon-only\"\n                    [disabled]=\"sourceMoveDisabled()\"\n                    (click)=\"moveTop(sourcelist, source, selectedItemsSource, onSourceReorder, SOURCE_LIST)\"\n                    [attr.data-pc-section]=\"'sourceMoveTopButton'\"\n                    [buttonProps]=\"getButtonProps('movetop')\"\n                >\n                    <AngleDoubleUpIcon *ngIf=\"!moveTopIconTemplate && !_moveTopIconTemplate\" [attr.data-pc-section]=\"'movetopicon'\" />\n                    <ng-template *ngTemplateOutlet=\"moveTopIconTemplate || _moveTopIconTemplate\"></ng-template>\n                </button>\n                <button\n                    type=\"button\"\n                    [attr.aria-label]=\"moveDownAriaLabel\"\n                    pButton\n                    pRipple\n                    severity=\"secondary\"\n                    class=\"p-button-icon-only\"\n                    [disabled]=\"sourceMoveDisabled()\"\n                    (click)=\"moveDown(sourcelist, source, selectedItemsSource, onSourceReorder, SOURCE_LIST)\"\n                    [attr.data-pc-section]=\"'sourceMoveDownButton'\"\n                    [buttonProps]=\"getButtonProps('movedown')\"\n                >\n                    <AngleDownIcon *ngIf=\"!moveDownIconTemplate && !_moveDownIconTemplate\" [attr.data-pc-section]=\"'movedownicon'\" />\n                    <ng-template *ngTemplateOutlet=\"moveDownIconTemplate || _moveDownIconTemplate\"></ng-template>\n                </button>\n                <button\n                    type=\"button\"\n                    [attr.aria-label]=\"moveBottomAriaLabel\"\n                    pButton\n                    pRipple\n                    severity=\"secondary\"\n                    class=\"p-button-icon-only\"\n                    [disabled]=\"sourceMoveDisabled()\"\n                    (click)=\"moveBottom(sourcelist, source, selectedItemsSource, onSourceReorder, SOURCE_LIST)\"\n                    [attr.data-pc-section]=\"'sourceMoveBottomButton'\"\n                    [buttonProps]=\"getButtonProps('movebottom')\"\n                >\n                    <AngleDoubleDownIcon *ngIf=\"!moveBottomIconTemplate || _moveBottomIconTemplate\" [attr.data-pc-section]=\"'movebottomicon'\" />\n                    <ng-template *ngTemplateOutlet=\"moveBottomIconTemplate || _moveBottomIconTemplate\"></ng-template>\n                </button>\n            </div>\n            <div class=\"p-picklist-list-container p-picklist-source-list-container\" [attr.data-pc-section]=\"'sourceWrapper'\" [attr.data-pc-group-section]=\"'listWrapper'\">\n                <p-listbox\n                    #sourcelist\n                    [multiple]=\"true\"\n                    [options]=\"source\"\n                    [(ngModel)]=\"selectedItemsSource\"\n                    optionLabel=\"name\"\n                    [id]=\"idSource + '_list'\"\n                    [ngStyle]=\"sourceStyle\"\n                    [striped]=\"stripedRows\"\n                    [tabindex]=\"tabindex\"\n                    (onFocus)=\"onListFocus($event, SOURCE_LIST)\"\n                    (onBlur)=\"onListBlur($event, SOURCE_LIST)\"\n                    (keydown)=\"onItemKeyDown($event, selectedItemsSource, onSourceSelect, SOURCE_LIST)\"\n                    (onDblClick)=\"onSourceItemDblClick()\"\n                    [disabled]=\"disabled\"\n                    [optionDisabled]=\"sourceOptionDisabled\"\n                    [metaKeySelection]=\"metaKeySelection\"\n                    [scrollHeight]=\"scrollHeight\"\n                    [autoOptionFocus]=\"autoOptionFocus\"\n                    [filter]=\"filterBy\"\n                    [filterBy]=\"filterBy\"\n                    [filterLocale]=\"filterLocale\"\n                    [filterMatchMode]=\"filterMatchMode\"\n                    [filterPlaceHolder]=\"sourceFilterPlaceholder\"\n                    [dragdrop]=\"dragdrop\"\n                    (onDrop)=\"onDrop($event, SOURCE_LIST)\"\n                    (onFilter)=\"onFilter($event.originalEvent, SOURCE_LIST)\"\n                >\n                    <ng-container *ngIf=\"sourceHeaderTemplate || _sourceHeaderTemplate || sourceHeader\">\n                        <ng-template #header>\n                            <div class=\"p-picklist-title\" *ngIf=\"!sourceHeaderTemplate && !_sourceHeaderTemplate\">{{ sourceHeader }}</div>\n                            <ng-template *ngTemplateOutlet=\"sourceHeaderTemplate || _sourceHeaderTemplate\"></ng-template>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"sourceFilterTemplate || _sourceFilterTemplate\">\n                        <ng-template #filter>\n                            <ng-template *ngTemplateOutlet=\"sourceFilterTemplate || _sourceFilterTemplate; context: { options: sourceFilterOptions }\"></ng-template>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"sourceFilterIconTemplate || _sourceFilterIconTemplate\">\n                        <ng-container *ngTemplateOutlet=\"sourceFilterIconTemplate || _sourceFilterIconTemplate\"></ng-container>\n                    </ng-container>\n                    <ng-container *ngIf=\"itemTemplate || _itemTemplate\">\n                        <ng-template #item let-item let-index=\"index\" let-selected=\"selected\" let-disabled=\"disabled\">\n                            <ng-container *ngTemplateOutlet=\"itemTemplate || _itemTemplate; context: { $implicit: item, index: index, selected: selected, disabled: disabled }\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"emptyMessageSourceTemplate || _emptyMessageSourceTemplate\">\n                        <ng-template #empty>\n                            <ng-container *ngTemplateOutlet=\"emptyMessageSourceTemplate || _emptyMessageSourceTemplate\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"emptyFilterMessageSourceTemplate || _emptyFilterMessageSourceTemplate\">\n                        <ng-template #emptyfilter>\n                            <ng-container *ngTemplateOutlet=\"emptyFilterMessageSourceTemplate || _emptyFilterMessageSourceTemplate\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                </p-listbox>\n            </div>\n            <div class=\"p-picklist-controls p-picklist-transfer-controls\" [attr.data-pc-section]=\"'buttons'\" [attr.data-pc-group-section]=\"'controls'\">\n                <button\n                    type=\"button\"\n                    [attr.aria-label]=\"moveToTargetAriaLabel\"\n                    pButton\n                    pRipple\n                    severity=\"secondary\"\n                    class=\"p-button-icon-only\"\n                    [disabled]=\"moveRightDisabled()\"\n                    (click)=\"moveRight()\"\n                    [attr.data-pc-section]=\"'moveToTargetButton'\"\n                    [buttonProps]=\"getButtonProps('movetotarget')\"\n                >\n                    <ng-container *ngIf=\"!moveToTargetIconTemplate && !_moveToTargetIconTemplate\">\n                        <AngleRightIcon *ngIf=\"!viewChanged\" [attr.data-pc-section]=\"'movetotargeticon'\" />\n                        <AngleDownIcon *ngIf=\"viewChanged\" [attr.data-pc-section]=\"'movetotargeticon'\" />\n                    </ng-container>\n                    <ng-template *ngTemplateOutlet=\"moveToTargetIconTemplate || _moveToTargetIconTemplate; context: { $implicit: viewChanged }\"></ng-template>\n                </button>\n                <button\n                    type=\"button\"\n                    [attr.aria-label]=\"moveAllToTargetAriaLabel\"\n                    pButton\n                    pRipple\n                    severity=\"secondary\"\n                    class=\"p-button-icon-only\"\n                    [disabled]=\"moveAllRightDisabled()\"\n                    (click)=\"moveAllRight()\"\n                    [attr.data-pc-section]=\"'moveAllToTargetButton'\"\n                    [buttonProps]=\"getButtonProps('movealltotarget')\"\n                >\n                    <ng-container *ngIf=\"!moveAllToTargetIconTemplate && !_moveAllToTargetIconTemplate\">\n                        <AngleDoubleRightIcon *ngIf=\"!viewChanged\" [attr.data-pc-section]=\"'movealltotargeticon'\" />\n                        <AngleDoubleDownIcon *ngIf=\"viewChanged\" [attr.data-pc-section]=\"'movealltotargeticon'\" />\n                    </ng-container>\n                    <ng-template *ngTemplateOutlet=\"moveAllToTargetIconTemplate || _moveAllToTargetIconTemplate; context: { $implicit: viewChanged }\"></ng-template>\n                </button>\n                <button\n                    type=\"button\"\n                    [attr.aria-label]=\"moveToSourceAriaLabel\"\n                    pButton\n                    pRipple\n                    severity=\"secondary\"\n                    class=\"p-button-icon-only\"\n                    [disabled]=\"moveLeftDisabled()\"\n                    (click)=\"moveLeft()\"\n                    [attr.data-pc-section]=\"'moveToSourceButton'\"\n                    [buttonProps]=\"getButtonProps('movetosource')\"\n                >\n                    <ng-container *ngIf=\"!moveToSourceIconTemplate && !_moveToSourceIconTemplate\">\n                        <AngleLeftIcon *ngIf=\"!viewChanged\" [attr.data-pc-section]=\"'movedownsourceticon'\" />\n                        <AngleUpIcon *ngIf=\"viewChanged\" [attr.data-pc-section]=\"'movedownsourceticon'\" />\n                    </ng-container>\n                    <ng-template *ngTemplateOutlet=\"moveToSourceIconTemplate || _moveToSourceIconTemplate; context: { $implicit: viewChanged }\"></ng-template>\n                </button>\n                <button\n                    type=\"button\"\n                    [attr.aria-label]=\"moveAllToSourceAriaLabel\"\n                    pButton\n                    pRipple\n                    severity=\"secondary\"\n                    class=\"p-button-icon-only\"\n                    [disabled]=\"moveAllLeftDisabled()\"\n                    (click)=\"moveAllLeft()\"\n                    [attr.data-pc-section]=\"'moveAllToSourceButton'\"\n                    [buttonProps]=\"getButtonProps('movealltosource')\"\n                >\n                    <ng-container *ngIf=\"!moveAllToSourceIconTemplate && !_moveAllToSourceIconTemplate\">\n                        <AngleDoubleLeftIcon *ngIf=\"!viewChanged\" [attr.data-pc-section]=\"'movealltosourceticon'\" />\n                        <AngleDoubleUpIcon *ngIf=\"viewChanged\" [attr.data-pc-section]=\"'movealltosourceticon'\" />\n                    </ng-container>\n                    <ng-template *ngTemplateOutlet=\"moveAllToSourceIconTemplate || _moveAllToSourceIconTemplate; context: { $implicit: viewChanged }\"></ng-template>\n                </button>\n            </div>\n            <div class=\"p-picklist-list-container p-picklist-target-list-container\" [attr.data-pc-section]=\"'targetWrapper'\" [attr.data-pc-group-section]=\"'listwrapper'\">\n                <p-listbox\n                    #targetlist\n                    [multiple]=\"true\"\n                    [options]=\"target\"\n                    [(ngModel)]=\"selectedItemsTarget\"\n                    optionLabel=\"name\"\n                    [id]=\"idTarget + '_list'\"\n                    [ngStyle]=\"targetStyle\"\n                    [striped]=\"stripedRows\"\n                    [tabindex]=\"tabindex\"\n                    (onFocus)=\"onListFocus($event, TARGET_LIST)\"\n                    (onBlur)=\"onListBlur($event, TARGET_LIST)\"\n                    (keydown)=\"onItemKeyDown($event, selectedItemsTarget, onTargetSelect, TARGET_LIST)\"\n                    (onDblClick)=\"onTargetItemDblClick()\"\n                    [disabled]=\"disabled\"\n                    [optionDisabled]=\"targetOptionDisabled\"\n                    [metaKeySelection]=\"metaKeySelection\"\n                    [scrollHeight]=\"scrollHeight\"\n                    [autoOptionFocus]=\"autoOptionFocus\"\n                    [filter]=\"filterBy\"\n                    [filterBy]=\"filterBy\"\n                    [filterLocale]=\"filterLocale\"\n                    [filterMatchMode]=\"filterMatchMode\"\n                    [filterPlaceHolder]=\"targetFilterPlaceholder\"\n                    [dragdrop]=\"dragdrop\"\n                    (onDrop)=\"onDrop($event, TARGET_LIST)\"\n                    (onFilter)=\"onFilter($event.originalEvent, TARGET_LIST)\"\n                >\n                    <ng-container *ngIf=\"targetHeaderTemplate || _targetHeaderTemplate || targetHeader\">\n                        <ng-template #header>\n                            <div class=\"p-picklist-title\" *ngIf=\"!targetHeaderTemplate && !_targetHeaderTemplate\">{{ targetHeader }}</div>\n                            <ng-template *ngTemplateOutlet=\"targetHeaderTemplate || _targetHeaderTemplate\"></ng-template>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"targetFilterTemplate || _targetFilterTemplate\">\n                        <ng-template #filter>\n                            <ng-template *ngTemplateOutlet=\"targetFilterTemplate || _targetFilterTemplate; context: { options: targetFilterOptions }\"></ng-template>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"targetFilterIconTemplate || _targetFilterIconTemplate\">\n                        <ng-container *ngTemplateOutlet=\"targetFilterIconTemplate || _targetFilterIconTemplate\"></ng-container>\n                    </ng-container>\n                    <ng-container *ngIf=\"itemTemplate || _itemTemplate\">\n                        <ng-template #item let-item let-index=\"index\" let-selected=\"selected\" let-disabled=\"disabled\">\n                            <ng-container *ngTemplateOutlet=\"itemTemplate || _itemTemplate; context: { $implicit: item, index: index, selected: selected, disabled: disabled }\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"emptyMessageTargetTemplate || _emptyMessageTargetTemplate\">\n                        <ng-template #empty>\n                            <ng-container *ngTemplateOutlet=\"emptyMessageTargetTemplate || _emptyMessageTargetTemplate\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"emptyFilterMessageTargetTemplate || _emptyFilterMessageTargetTemplate\">\n                        <ng-template #emptyfilter>\n                            <ng-container *ngTemplateOutlet=\"emptyFilterMessageTargetTemplate || _emptyFilterMessageTargetTemplate\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                </p-listbox>\n            </div>\n            <div class=\"p-picklist-controls p-picklist-target-controls\" *ngIf=\"showTargetControls\" [attr.data-pc-section]=\"'targetControls'\" [attr.data-pc-group-section]=\"'controls'\">\n                <button\n                    type=\"button\"\n                    [attr.aria-label]=\"moveUpAriaLabel\"\n                    pButton\n                    pRipple\n                    severity=\"secondary\"\n                    class=\"p-button-icon-only\"\n                    [disabled]=\"targetMoveDisabled()\"\n                    (click)=\"moveUp(targetlist, target, selectedItemsTarget, onTargetReorder, TARGET_LIST)\"\n                    [attr.data-pc-section]=\"'targetMoveUpButton'\"\n                    [buttonProps]=\"getButtonProps('moveup')\"\n                >\n                    <AngleUpIcon *ngIf=\"!moveUpIconTemplate && !_moveUpIconTemplate\" [attr.data-pc-section]=\"'moveupicon'\" />\n                    <ng-template *ngTemplateOutlet=\"moveUpIconTemplate || _moveUpIconTemplate\"></ng-template>\n                </button>\n                <button\n                    type=\"button\"\n                    [attr.aria-label]=\"moveTopAriaLabel\"\n                    pButton\n                    pRipple\n                    severity=\"secondary\"\n                    class=\"p-button-icon-only\"\n                    [disabled]=\"targetMoveDisabled()\"\n                    (click)=\"moveTop(targetlist, target, selectedItemsTarget, onTargetReorder, TARGET_LIST)\"\n                    [attr.data-pc-section]=\"'targetMoveTopButton'\"\n                    [buttonProps]=\"getButtonProps('movetop')\"\n                >\n                    <AngleDoubleUpIcon *ngIf=\"!moveTopIconTemplate && !_moveTopIconTemplate\" [attr.data-pc-section]=\"'movetopicon'\" />\n                    <ng-template *ngTemplateOutlet=\"moveTopIconTemplate || moveTopIconTemplate\"></ng-template>\n                </button>\n                <button\n                    type=\"button\"\n                    [attr.aria-label]=\"moveDownAriaLabel\"\n                    pButton\n                    pRipple\n                    severity=\"secondary\"\n                    class=\"p-button-icon-only\"\n                    [disabled]=\"targetMoveDisabled()\"\n                    (click)=\"moveDown(targetlist, target, selectedItemsTarget, onTargetReorder, TARGET_LIST)\"\n                    [attr.data-pc-section]=\"'targetMoveDownButton'\"\n                    [buttonProps]=\"getButtonProps('movedown')\"\n                >\n                    <AngleDownIcon *ngIf=\"!moveDownIconTemplate && !_moveDownIconTemplate\" [attr.data-pc-section]=\"'movedownicon'\" />\n                    <ng-template *ngTemplateOutlet=\"moveDownIconTemplate || _moveDownIconTemplate\"></ng-template>\n                </button>\n                <button\n                    type=\"button\"\n                    [attr.aria-label]=\"moveBottomAriaLabel\"\n                    pButton\n                    pRipple\n                    severity=\"secondary\"\n                    class=\"p-button-icon-only\"\n                    [disabled]=\"targetMoveDisabled()\"\n                    (click)=\"moveBottom(targetlist, target, selectedItemsTarget, onTargetReorder, TARGET_LIST)\"\n                    [attr.data-pc-section]=\"'targetMoveBottomButton'\"\n                    [buttonProps]=\"getButtonProps('movebottom')\"\n                >\n                    <AngleDoubleDownIcon *ngIf=\"!moveBottomIconTemplate && !_moveBottomIconTemplate\" [attr.data-pc-section]=\"'movebottomicon'\" />\n                    <ng-template *ngTemplateOutlet=\"moveBottomIconTemplate || _moveBottomIconTemplate\"></ng-template>\n                </button>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [PickListStyle]\n})\nexport class PickList extends BaseComponent implements AfterViewChecked, AfterContentInit {\n    /**\n     * An array of objects for the source list.\n     * @group Props\n     */\n    @Input() source: any[] | undefined;\n    /**\n     * An array of objects for the target list.\n     * @group Props\n     */\n    @Input() target: any[] | undefined;\n    /**\n     * Text for the source list caption\n     * @group Props\n     */\n    @Input() sourceHeader: string | undefined;\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    @Input({ transform: numberAttribute }) tabindex: number | undefined = 0;\n    /**\n     * Defines a string that labels the move to right button for accessibility.\n     * @group Props\n     */\n    @Input() rightButtonAriaLabel: string | undefined;\n    /**\n     * Defines a string that labels the move to left button for accessibility.\n     * @group Props\n     */\n    @Input() leftButtonAriaLabel: string | undefined;\n    /**\n     * Defines a string that labels the move to all right button for accessibility.\n     * @group Props\n     */\n    @Input() allRightButtonAriaLabel: string | undefined;\n    /**\n     * Defines a string that labels the move to all left button for accessibility.\n     * @group Props\n     */\n    @Input() allLeftButtonAriaLabel: string | undefined;\n    /**\n     * Defines a string that labels the move to up button for accessibility.\n     * @group Props\n     */\n    @Input() upButtonAriaLabel: string | undefined;\n    /**\n     * Defines a string that labels the move to down button for accessibility.\n     * @group Props\n     */\n    @Input() downButtonAriaLabel: string | undefined;\n    /**\n     * Defines a string that labels the move to top button for accessibility.\n     * @group Props\n     */\n    @Input() topButtonAriaLabel: string | undefined;\n    /**\n     * Defines a string that labels the move to bottom button for accessibility.\n     * @group Props\n     */\n    @Input() bottomButtonAriaLabel: string | undefined;\n    /**\n     * Text for the target list caption\n     * @group Props\n     */\n    @Input() targetHeader: string | undefined;\n    /**\n     * When enabled orderlist adjusts its controls based on screen size.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) responsive: boolean | undefined;\n    /**\n     * When specified displays an input field to filter the items on keyup and decides which field to search (Accepts multiple fields with a comma).\n     * @group Props\n     */\n    @Input() filterBy: string | undefined;\n    /**\n     * Locale to use in filtering. The default locale is the host environment's current locale.\n     * @group Props\n     */\n    @Input() filterLocale: string | undefined;\n    /**\n     * Function to optimize the dom operations by delegating to ngForTrackBy, default algorithm checks for object identity. Use sourceTrackBy or targetTrackBy in case different algorithms are needed per list.\n     * @group Props\n     */\n    @Input() trackBy: Function = (index: number, item: any) => item;\n    /**\n     * Function to optimize the dom operations by delegating to ngForTrackBy in source list, default algorithm checks for object identity.\n     * @group Props\n     */\n    @Input() sourceTrackBy: Function | undefined;\n    /**\n     * Function to optimize the dom operations by delegating to ngForTrackBy in target list, default algorithm checks for object identity.\n     * @group Props\n     */\n    @Input() targetTrackBy: Function | undefined;\n    /**\n     * Whether to show filter input for source list when filterBy is enabled.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) showSourceFilter: boolean = true;\n    /**\n     * Whether to show filter input for target list when filterBy is enabled.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) showTargetFilter: boolean = true;\n    /**\n     * Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) metaKeySelection: boolean = false;\n    /**\n     * Whether to enable dragdrop based reordering.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) dragdrop: boolean = false;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    @Input() style: { [klass: string]: any } | null | undefined;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    @Input() styleClass: string | undefined;\n    /**\n     * Inline style of the source list element.\n     * @group Props\n     */\n    @Input() sourceStyle: any;\n    /**\n     * Inline style of the target list element.\n     * @group Props\n     */\n    @Input() targetStyle: any;\n    /**\n     * Whether to show buttons of source list.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) showSourceControls: boolean = true;\n    /**\n     * Whether to show buttons of target list.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) showTargetControls: boolean = true;\n    /**\n     * Placeholder text on source filter input.\n     * @group Props\n     */\n    @Input() sourceFilterPlaceholder: string | undefined;\n    /**\n     * Placeholder text on target filter input.\n     * @group Props\n     */\n    @Input() targetFilterPlaceholder: string | undefined;\n    /**\n     * When present, it specifies that the component should be disabled.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) disabled: boolean = false;\n\n    /**\n     * Name of the disabled field of a target option or function to determine disabled state.\n     * @group Props\n     */\n    @Input() sourceOptionDisabled: string | ((item: any) => boolean) | undefined;\n\n    /**\n     * Name of the disabled field of a target option or function to determine disabled state.\n     * @group Props\n     */\n    @Input() targetOptionDisabled: string | ((item: any) => boolean) | undefined;\n\n    /**\n     * Defines a string that labels the filter input of source list.\n     * @group Props\n     */\n    @Input() ariaSourceFilterLabel: string | undefined;\n    /**\n     * Defines a string that labels the filter input of target list.\n     * @group Props\n     */\n    @Input() ariaTargetFilterLabel: string | undefined;\n    /**\n     * Defines how the items are filtered.\n     * @group Props\n     */\n    @Input() filterMatchMode: 'contains' | 'startsWith' | 'endsWith' | 'equals' | 'notEquals' | 'in' | 'lt' | 'lte' | 'gt' | 'gte' | string = 'contains';\n    /**\n     * Whether to displays rows with alternating colors.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) stripedRows: boolean | undefined;\n    /**\n     * Keeps selection on the transfer list.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) keepSelection: boolean = false;\n    /**\n     * Height of the viewport, a scrollbar is defined if height of list exceeds this value.\n     * @group Props\n     */\n    @Input() scrollHeight: string = '14rem';\n    /**\n     * Whether to focus on the first visible or selected element.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) autoOptionFocus: boolean = true;\n    /**\n     * Used to pass all properties of the ButtonProps to the Button component.\n     * @group Props\n     */\n    @Input() buttonProps: ButtonProps = { severity: 'secondary' };\n    /**\n     * Used to pass all properties of the ButtonProps to the move up button inside the component.\n     * @group Props\n     */\n    @Input() moveUpButtonProps: ButtonProps;\n    /**\n     * \tUsed to pass all properties of the ButtonProps to the move top button inside the component.\n     * @group Props\n     */\n    @Input() moveTopButtonProps: ButtonProps;\n    /**\n     * \tUsed to pass all properties of the ButtonProps to the move down button inside the component.\n     * @group Props\n     */\n    @Input() moveDownButtonProps: ButtonProps;\n    /**\n     * \tUsed to pass all properties of the ButtonProps to the move bottom button inside the component.\n     * @group Props\n     */\n    @Input() moveBottomButtonProps: ButtonProps;\n    /**\n     * \tUsed to pass all properties of the ButtonProps to the move to target button inside the component.\n     * @group Props\n     */\n    @Input() moveToTargetProps: ButtonProps;\n    /**\n     * \tUsed to pass all properties of the ButtonProps to the move all to target button inside the component.\n     * @group Props\n     */\n    @Input() moveAllToTargetProps: ButtonProps;\n    /**\n     *  Used to pass all properties of the ButtonProps to the move to source button inside the component.\n     * @group Props\n     */\n    @Input() moveToSourceProps: ButtonProps;\n    /**\n     *  Used to pass all properties of the ButtonProps to the move all to source button inside the component.\n     * @group Props\n     */\n    @Input() moveAllToSourceProps: ButtonProps;\n\n    /**\n     * Indicates the width of the screen at which the component should change its behavior.\n     * @group Props\n     */\n    @Input() get breakpoint(): string {\n        return this._breakpoint;\n    }\n    set breakpoint(value: string) {\n        if (value !== this._breakpoint) {\n            this._breakpoint = value;\n            if (isPlatformBrowser(this.platformId)) {\n                this.destroyMedia();\n                this.initMedia();\n            }\n        }\n    }\n    /**\n     * Callback to invoke when items are moved from target to source.\n     * @param {PickListMoveToSourceEvent} event - Custom move to source event.\n     * @group Emits\n     */\n    @Output() onMoveToSource: EventEmitter<PickListMoveToSourceEvent> = new EventEmitter<PickListMoveToSourceEvent>();\n    /**\n     * Callback to invoke when all items are moved from target to source.\n     * @param {PickListMoveAllToSourceEvent} event - Custom move all to source event.\n     * @group Emits\n     */\n    @Output() onMoveAllToSource: EventEmitter<PickListMoveAllToSourceEvent> = new EventEmitter<PickListMoveAllToSourceEvent>();\n    /**\n     * Callback to invoke when all items are moved from source to target.\n     * @param {PickListMoveAllToTargetEvent} event - Custom move all to target event.\n     * @group Emits\n     */\n    @Output() onMoveAllToTarget: EventEmitter<PickListMoveAllToTargetEvent> = new EventEmitter<PickListMoveAllToTargetEvent>();\n    /**\n     * Callback to invoke when items are moved from source to target.\n     * @param {PickListMoveToTargetEvent} event - Custom move to target event.\n     * @group Emits\n     */\n    @Output() onMoveToTarget: EventEmitter<PickListMoveToTargetEvent> = new EventEmitter<PickListMoveToTargetEvent>();\n    /**\n     * Callback to invoke when items are reordered within source list.\n     * @param {PickListSourceReorderEvent} event - Custom source reorder event.\n     * @group Emits\n     */\n    @Output() onSourceReorder: EventEmitter<PickListSourceReorderEvent> = new EventEmitter<PickListSourceReorderEvent>();\n    /**\n     * Callback to invoke when items are reordered within target list.\n     * @param {PickListTargetReorderEvent} event - Custom target reorder event.\n     * @group Emits\n     */\n    @Output() onTargetReorder: EventEmitter<PickListTargetReorderEvent> = new EventEmitter<PickListTargetReorderEvent>();\n    /**\n     * Callback to invoke when items are selected within source list.\n     * @param {PickListSourceSelectEvent} event - Custom source select event.\n     * @group Emits\n     */\n    @Output() onSourceSelect: EventEmitter<PickListSourceSelectEvent> = new EventEmitter<PickListSourceSelectEvent>();\n    /**\n     * Callback to invoke when items are selected within target list.\n     * @param {PickListTargetSelectEvent} event - Custom target select event.\n     * @group Emits\n     */\n    @Output() onTargetSelect: EventEmitter<PickListTargetSelectEvent> = new EventEmitter<PickListTargetSelectEvent>();\n    /**\n     * Callback to invoke when the source list is filtered\n     * @param {PickListSourceFilterEvent} event - Custom source filter event.\n     * @group Emits\n     */\n    @Output() onSourceFilter: EventEmitter<PickListSourceFilterEvent> = new EventEmitter<PickListSourceFilterEvent>();\n    /**\n     * Callback to invoke when the target list is filtered\n     * @param {PickListTargetFilterEvent} event - Custom target filter event.\n     * @group Emits\n     */\n    @Output() onTargetFilter: EventEmitter<PickListTargetFilterEvent> = new EventEmitter<PickListTargetFilterEvent>();\n\n    /**\n     * Callback to invoke when the list is focused\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    @Output() onFocus: EventEmitter<Event> = new EventEmitter<Event>();\n\n    /**\n     * Callback to invoke when the list is blurred\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    @Output() onBlur: EventEmitter<Event> = new EventEmitter<Event>();\n\n    @ViewChild('sourcelist') listViewSourceChild: Listbox;\n\n    @ViewChild('targetlist') listViewTargetChild: Listbox;\n\n    @ViewChild('sourceFilter') sourceFilterViewChild: Nullable<ElementRef>;\n\n    @ViewChild('targetFilter') targetFilterViewChild: Nullable<ElementRef>;\n\n    getButtonProps(direction: string) {\n        switch (direction) {\n            case 'moveup':\n                return { ...this.buttonProps, ...this.moveUpButtonProps };\n            case 'movetop':\n                return { ...this.buttonProps, ...this.moveTopButtonProps };\n            case 'movedown':\n                return { ...this.buttonProps, ...this.moveDownButtonProps };\n            case 'movebottom':\n                return { ...this.buttonProps, ...this.moveBottomButtonProps };\n            case 'movetotarget':\n                return { ...this.buttonProps, ...this.moveToTargetProps };\n            case 'movealltotarget':\n                return { ...this.buttonProps, ...this.moveAllToTargetProps };\n            case 'movetosource':\n                return { ...this.buttonProps, ...this.moveToSourceProps };\n            case 'movealltosource':\n                return { ...this.buttonProps, ...this.moveAllToSourceProps };\n            default:\n                return this.buttonProps;\n        }\n    }\n\n    get moveUpAriaLabel() {\n        return this.upButtonAriaLabel ? this.upButtonAriaLabel : this.config.translation.aria ? this.config.translation.aria.moveUp : undefined;\n    }\n\n    get moveTopAriaLabel() {\n        return this.topButtonAriaLabel ? this.topButtonAriaLabel : this.config.translation.aria ? this.config.translation.aria.moveTop : undefined;\n    }\n\n    get moveDownAriaLabel() {\n        return this.downButtonAriaLabel ? this.downButtonAriaLabel : this.config.translation.aria ? this.config.translation.aria.moveDown : undefined;\n    }\n\n    get moveBottomAriaLabel() {\n        return this.bottomButtonAriaLabel ? this.bottomButtonAriaLabel : this.config.translation.aria ? this.config.translation.aria.moveDown : undefined;\n    }\n\n    get moveToTargetAriaLabel() {\n        return this.rightButtonAriaLabel ? this.rightButtonAriaLabel : this.config.translation.aria ? this.config.translation.aria.moveToTarget : undefined;\n    }\n\n    get moveAllToTargetAriaLabel() {\n        return this.allRightButtonAriaLabel ? this.allRightButtonAriaLabel : this.config.translation.aria ? this.config.translation.aria.moveAllToTarget : undefined;\n    }\n\n    get moveToSourceAriaLabel() {\n        return this.leftButtonAriaLabel ? this.leftButtonAriaLabel : this.config.translation.aria ? this.config.translation.aria.moveToSource : undefined;\n    }\n\n    get moveAllToSourceAriaLabel() {\n        return this.allLeftButtonAriaLabel ? this.allLeftButtonAriaLabel : this.config.translation.aria ? this.config.translation.aria.moveAllToSource : undefined;\n    }\n\n    get idSource() {\n        return this.id + '_source';\n    }\n\n    get idTarget() {\n        return this.id + '_target';\n    }\n\n    get focusedOptionId() {\n        return this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : null;\n    }\n\n    _breakpoint: string = '960px';\n\n    public visibleOptionsSource: any[] | undefined | null;\n\n    public visibleOptionsTarget: any[] | undefined | null;\n\n    selectedItemsSource: any[] = [];\n\n    selectedItemsTarget: any[] = [];\n\n    reorderedListElement: any;\n\n    movedUp: Nullable<boolean>;\n\n    movedDown: Nullable<boolean>;\n\n    itemTouched: Nullable<boolean>;\n\n    styleElement: any;\n\n    id: string = uuid('pn_id_');\n\n    filterValueSource: Nullable<string>;\n\n    filterValueTarget: Nullable<string>;\n\n    fromListType: Nullable<number>;\n\n    sourceFilterOptions: Nullable<PickListFilterOptions>;\n\n    targetFilterOptions: Nullable<PickListFilterOptions>;\n\n    readonly SOURCE_LIST: number = -1;\n\n    readonly TARGET_LIST: number = 1;\n\n    window: Window;\n\n    media: MediaQueryList | null | undefined;\n\n    viewChanged: boolean | undefined;\n\n    focusedOptionIndex: any = -1;\n\n    focusedOption: any | undefined;\n\n    focused: any = {\n        sourceList: false,\n        targetList: false\n    };\n\n    _componentStyle = inject(PickListStyle);\n\n    mediaChangeListener: VoidListener;\n\n    filterService = inject(FilterService);\n\n    ngOnInit() {\n        super.ngOnInit();\n        if (this.responsive) {\n            this.createStyle();\n            this.initMedia();\n        }\n\n        if (this.filterBy) {\n            this.sourceFilterOptions = {\n                filter: (value) => this.filterSource(value),\n                reset: () => this.resetSourceFilter()\n            };\n\n            this.targetFilterOptions = {\n                filter: (value) => this.filterTarget(value),\n                reset: () => this.resetTargetFilter()\n            };\n        }\n    }\n\n    /**\n     * Custom item template.\n     * @group Templates\n     */\n    @ContentChild('item', { descendants: false }) itemTemplate: TemplateRef<any>;\n\n    /**\n     * Custom source header template.\n     * @group Templates\n     */\n    @ContentChild('sourceHeader', { descendants: false }) sourceHeaderTemplate: TemplateRef<any>;\n\n    /**\n     * Custom target header template.\n     * @group Templates\n     */\n    @ContentChild('targetHeader', { descendants: false }) targetHeaderTemplate: TemplateRef<any>;\n\n    /**\n     * Custom source filter template.\n     * @group Templates\n     */\n    @ContentChild('sourceFilter', { descendants: false }) sourceFilterTemplate: TemplateRef<{ options: PickListFilterOptions }>;\n\n    /**\n     * Custom target filter template.\n     * @group Templates\n     */\n    @ContentChild('targetFilter', { descendants: false }) targetFilterTemplate: TemplateRef<{ options: PickListFilterOptions }>;\n\n    /**\n     * Custom empty message when source is empty template.\n     * @group Templates\n     */\n    @ContentChild('emptymessagesource', { descendants: false }) emptyMessageSourceTemplate: TemplateRef<any>;\n\n    /**\n     * Custom empty filter message when source is empty template.\n     * @group Templates\n     */\n    @ContentChild('emptyfiltermessagesource', { descendants: false }) emptyFilterMessageSourceTemplate: TemplateRef<any>;\n\n    /**\n     * Custom empty message when target is empty template.\n     * @group Templates\n     */\n    @ContentChild('emptymessagetarget', { descendants: false }) emptyMessageTargetTemplate: TemplateRef<any>;\n\n    /**\n     * Custom empty filter message when target is empty template.\n     * @group Templates\n     */\n    @ContentChild('emptyfiltermessagetarget', { descendants: false }) emptyFilterMessageTargetTemplate: TemplateRef<any>;\n\n    /**\n     * Custom move up icon template.\n     * @group Templates\n     */\n    @ContentChild('moveupicon', { descendants: false }) moveUpIconTemplate: TemplateRef<{ $implicit: boolean }>;\n\n    /**\n     * Custom move top icon template.\n     * @group Templates\n     */\n    @ContentChild('movetopicon', { descendants: false }) moveTopIconTemplate: TemplateRef<{ $implicit: boolean }>;\n\n    /**\n     * Custom move down icon template.\n     * @group Templates\n     */\n    @ContentChild('movedownicon', { descendants: false }) moveDownIconTemplate: TemplateRef<{ $implicit: boolean }>;\n\n    /**\n     * Custom move bottom icon template.\n     * @group Templates\n     */\n    @ContentChild('movebottomicon', { descendants: false }) moveBottomIconTemplate: TemplateRef<{ $implicit: boolean }>;\n\n    /**\n     * Custom move to target icon template.\n     * @group Templates\n     */\n    @ContentChild('movetotargeticon', { descendants: false }) moveToTargetIconTemplate: TemplateRef<{ $implicit: boolean }>;\n\n    /**\n     * Custom move all to target icon template.\n     * @group Templates\n     */\n    @ContentChild('movealltotargeticon', { descendants: false }) moveAllToTargetIconTemplate: TemplateRef<{ $implicit: boolean }>;\n\n    /**\n     * Custom move to source icon template.\n     * @group Templates\n     */\n    @ContentChild('movetosourceicon', { descendants: false }) moveToSourceIconTemplate: TemplateRef<{ $implicit: boolean }>;\n\n    /**\n     * Custom move all to source icon template.\n     * @group Templates\n     */\n    @ContentChild('movealltosourceicon', { descendants: false }) moveAllToSourceIconTemplate: TemplateRef<{ $implicit: boolean }>;\n\n    /**\n     * Custom target filter icon template.\n     * @group Templates\n     */\n    @ContentChild('targetfiltericon', { descendants: false }) targetFilterIconTemplate: TemplateRef<{ options: PickListFilterOptions }>;\n\n    /**\n     * Custom source filter icon template.\n     * @group Templates\n     */\n    @ContentChild('sourcefiltericon', { descendants: false }) sourceFilterIconTemplate: TemplateRef<{ options: PickListFilterOptions }>;\n\n    @ContentChildren(PrimeTemplate) templates!: QueryList<PrimeTemplate>;\n\n    _itemTemplate: TemplateRef<any> | undefined;\n\n    _sourceHeaderTemplate: TemplateRef<any> | undefined;\n\n    _targetHeaderTemplate: TemplateRef<any> | undefined;\n\n    _sourceFilterTemplate: TemplateRef<any> | undefined;\n\n    _targetFilterTemplate: TemplateRef<any> | undefined;\n\n    _emptyMessageSourceTemplate: TemplateRef<any> | undefined;\n\n    _emptyFilterMessageSourceTemplate: TemplateRef<any> | undefined;\n\n    _emptyMessageTargetTemplate: TemplateRef<any> | undefined;\n\n    _emptyFilterMessageTargetTemplate: TemplateRef<any> | undefined;\n\n    _moveUpIconTemplate: TemplateRef<any> | undefined;\n\n    _moveTopIconTemplate: TemplateRef<any> | undefined;\n\n    _moveDownIconTemplate: TemplateRef<any> | undefined;\n\n    _moveBottomIconTemplate: TemplateRef<any> | undefined;\n\n    _moveToTargetIconTemplate: TemplateRef<any> | undefined;\n\n    _moveAllToTargetIconTemplate: TemplateRef<any> | undefined;\n\n    _moveToSourceIconTemplate: TemplateRef<any> | undefined;\n\n    _moveAllToSourceIconTemplate: TemplateRef<any> | undefined;\n\n    _targetFilterIconTemplate: TemplateRef<any> | undefined;\n\n    _sourceFilterIconTemplate: TemplateRef<any> | undefined;\n\n    ngAfterContentInit() {\n        (this.templates as QueryList<PrimeTemplate>).forEach((item) => {\n            switch (item.getType()) {\n                case 'item':\n                    this._itemTemplate = item.template;\n                    break;\n\n                case 'option':\n                    this._itemTemplate = item.template;\n                    break;\n\n                case 'sourceHeader':\n                    this._sourceHeaderTemplate = item.template;\n                    break;\n\n                case 'targetHeader':\n                    this._targetHeaderTemplate = item.template;\n                    break;\n\n                case 'sourceFilter':\n                    this._sourceFilterTemplate = item.template;\n                    break;\n\n                case 'targetFilter':\n                    this._targetFilterTemplate = item.template;\n                    break;\n\n                case 'emptymessagesource':\n                    this._emptyMessageSourceTemplate = item.template;\n                    break;\n\n                case 'emptyfiltermessagesource':\n                    this._emptyFilterMessageSourceTemplate = item.template;\n                    break;\n\n                case 'emptymessagetarget':\n                    this._emptyMessageTargetTemplate = item.template;\n                    break;\n\n                case 'emptyfiltermessagetarget':\n                    this._emptyFilterMessageTargetTemplate = item.template;\n                    break;\n\n                case 'moveupicon':\n                    this._moveUpIconTemplate = item.template;\n                    break;\n\n                case 'movetopicon':\n                    this._moveTopIconTemplate = item.template;\n                    break;\n\n                case 'movedownicon':\n                    this._moveDownIconTemplate = item.template;\n                    break;\n\n                case 'movebottomicon':\n                    this._moveBottomIconTemplate = item.template;\n                    break;\n\n                case 'movetotargeticon':\n                    this._moveToTargetIconTemplate = item.template;\n                    break;\n\n                case 'movealltotargeticon':\n                    this._moveAllToTargetIconTemplate = item.template;\n                    break;\n\n                case 'movetosourceicon':\n                    this._moveToSourceIconTemplate = item.template;\n                    break;\n\n                case 'movealltosourceicon':\n                    this._moveAllToSourceIconTemplate = item.template;\n                    break;\n\n                case 'targetfiltericon':\n                    this._targetFilterIconTemplate = item.template;\n                    break;\n\n                case 'sourcefiltericon':\n                    this._sourceFilterIconTemplate = item.template;\n                    break;\n\n                default:\n                    this._itemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n\n    ngAfterViewChecked() {\n        if (this.movedUp || this.movedDown) {\n            let listItems = find(this.reorderedListElement?.el.nativeElement, 'li.p-listbox-option-selected');\n\n            let listItem;\n\n            if (listItems.length > 0) {\n                if (this.movedUp) listItem = listItems[0];\n                else listItem = listItems[listItems.length - 1];\n\n                scrollInView(this.reorderedListElement?.el.nativeElement, listItem);\n            }\n            this.movedUp = false;\n            this.movedDown = false;\n            this.reorderedListElement = null;\n        }\n    }\n\n    onItemClick(event: Event | any, item: any, selectedItems: any[], listType: number, callback: EventEmitter<any>, itemId?: string) {\n        if (this.disabled) {\n            return;\n        }\n\n        let index = this.findIndexInList(item, selectedItems);\n        if (itemId) this.focusedOptionIndex = itemId;\n        let selected = index != -1;\n        let metaSelection = this.itemTouched ? false : this.metaKeySelection;\n\n        if (metaSelection) {\n            let metaKey = (<KeyboardEvent>event).metaKey || (<KeyboardEvent>event).ctrlKey || (<KeyboardEvent>event).shiftKey;\n\n            if (selected && metaKey) {\n                selectedItems = selectedItems.filter((_, i) => i !== index);\n            } else {\n                if (!metaKey) {\n                    selectedItems = [];\n                }\n                selectedItems.push(item);\n            }\n        } else {\n            if (selected) {\n                selectedItems = selectedItems.filter((_, i) => i !== index); // Creating a new array without the selected item\n            } else {\n                selectedItems.push(item);\n            }\n        }\n        this.setSelectionList(listType, selectedItems);\n        callback.emit({ originalEvent: event, items: selectedItems });\n\n        this.itemTouched = false;\n    }\n\n    onOptionMouseDown(index, listType: number) {\n        this.focused[listType === this.SOURCE_LIST ? 'sourceList' : 'targetList'] = true;\n        this.focusedOptionIndex = index;\n    }\n\n    onSourceItemDblClick() {\n        if (this.disabled) {\n            return;\n        }\n\n        this.moveRight();\n        this.triggerChangeDetection();\n    }\n\n    onTargetItemDblClick() {\n        if (this.disabled) {\n            return;\n        }\n\n        this.moveLeft();\n        this.triggerChangeDetection();\n    }\n\n    onFilter(event: KeyboardEvent, listType: number) {\n        let query = (<HTMLInputElement>event.target).value;\n        if (listType === this.SOURCE_LIST) this.filterSource(query);\n        else if (listType === this.TARGET_LIST) this.filterTarget(query);\n    }\n\n    filterSource(value: any = '') {\n        this.filterValueSource = value.trim().toLocaleLowerCase(this.filterLocale);\n        this.filter(<any[]>this.source, this.SOURCE_LIST);\n        this.onSourceFilter.emit({ query: this.filterValueSource, value: this.visibleOptionsSource });\n    }\n\n    filterTarget(value: any = '') {\n        this.filterValueTarget = value.trim().toLocaleLowerCase(this.filterLocale);\n        this.filter(<any[]>this.target, this.TARGET_LIST);\n        this.onTargetFilter.emit({ query: this.filterValueTarget, value: this.visibleOptionsTarget });\n    }\n\n    filter(data: any[], listType: number) {\n        let searchFields = (<string>this.filterBy).split(',');\n\n        if (listType === this.SOURCE_LIST) {\n            this.visibleOptionsSource = this.filterService.filter(data, searchFields, this.filterValueSource, this.filterMatchMode, this.filterLocale);\n            this.onSourceFilter.emit({ query: this.filterValueSource, value: this.visibleOptionsSource });\n        } else if (listType === this.TARGET_LIST) {\n            this.visibleOptionsTarget = this.filterService.filter(data, searchFields, this.filterValueTarget, this.filterMatchMode, this.filterLocale);\n            this.onTargetFilter.emit({ query: this.filterValueTarget, value: this.visibleOptionsTarget });\n        }\n    }\n\n    isItemVisible(item: any, listType: number): boolean | undefined {\n        if (listType == this.SOURCE_LIST) return this.isVisibleInList(<any[]>this.visibleOptionsSource, item, <string>this.filterValueSource);\n        else return this.isVisibleInList(<any[]>this.visibleOptionsTarget, item, <string>this.filterValueTarget);\n    }\n\n    isEmpty(listType: number) {\n        if (listType == this.SOURCE_LIST) return this.filterValueSource ? !this.visibleOptionsSource || this.visibleOptionsSource.length === 0 : !this.source || this.source.length === 0;\n        else return this.filterValueTarget ? !this.visibleOptionsTarget || this.visibleOptionsTarget.length === 0 : !this.target || this.target.length === 0;\n    }\n\n    isVisibleInList(data: any[], item: any, filterValue: string): boolean | undefined {\n        if (filterValue && filterValue.trim().length) {\n            for (let i = 0; i < data.length; i++) {\n                if (item == data[i]) {\n                    return true;\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    onItemTouchEnd() {\n        if (this.disabled) {\n            return;\n        }\n\n        this.itemTouched = true;\n    }\n\n    private sortByIndexInList(items: any[], list: any) {\n        return items.sort((item1, item2) => findIndexInList(item1, list) - findIndexInList(item2, list));\n    }\n\n    triggerChangeDetection() {\n        this.source = [...this.source];\n        this.target = [...this.target];\n    }\n\n    moveUp(listElement: any, list: any[], selectedItems: any[], callback: EventEmitter<any>, listType: number) {\n        if (selectedItems && selectedItems.length) {\n            selectedItems = this.sortByIndexInList(selectedItems, list);\n            for (let i = 0; i < selectedItems.length; i++) {\n                let selectedItem = selectedItems[i];\n                let selectedItemIndex: number = findIndexInList(selectedItem, list);\n\n                if (selectedItemIndex != 0) {\n                    let movedItem = list[selectedItemIndex];\n                    let temp = list[selectedItemIndex - 1];\n                    list[selectedItemIndex - 1] = movedItem;\n                    list[selectedItemIndex] = temp;\n                } else {\n                    break;\n                }\n            }\n\n            if (this.dragdrop && ((this.filterValueSource && listType === this.SOURCE_LIST) || (this.filterValueTarget && listType === this.TARGET_LIST))) this.filter(list, listType);\n\n            this.movedUp = true;\n            this.reorderedListElement = listElement;\n            callback.emit({ items: selectedItems });\n            this.triggerChangeDetection();\n        }\n    }\n\n    moveTop(listElement: any, list: any[], selectedItems: any[], callback: EventEmitter<any>, listType: number) {\n        if (selectedItems && selectedItems.length) {\n            selectedItems = this.sortByIndexInList(selectedItems, list);\n            for (let i = 0; i < selectedItems.length; i++) {\n                let selectedItem = selectedItems[i];\n                let selectedItemIndex: number = findIndexInList(selectedItem, list);\n\n                if (selectedItemIndex != 0) {\n                    let movedItem = list.splice(selectedItemIndex, 1)[0];\n                    list.unshift(movedItem);\n                } else {\n                    break;\n                }\n            }\n\n            if (this.dragdrop && ((this.filterValueSource && listType === this.SOURCE_LIST) || (this.filterValueTarget && listType === this.TARGET_LIST))) this.filter(list, listType);\n\n            listElement.scrollTop = 0;\n            callback.emit({ items: selectedItems });\n            this.triggerChangeDetection();\n        }\n    }\n\n    moveDown(listElement: any, list: any[], selectedItems: any[], callback: EventEmitter<any>, listType: number) {\n        if (selectedItems && selectedItems.length) {\n            selectedItems = this.sortByIndexInList(selectedItems, list);\n            for (let i = selectedItems.length - 1; i >= 0; i--) {\n                let selectedItem = selectedItems[i];\n                let selectedItemIndex: number = findIndexInList(selectedItem, list);\n\n                if (selectedItemIndex != list.length - 1) {\n                    let movedItem = list[selectedItemIndex];\n                    let temp = list[selectedItemIndex + 1];\n                    list[selectedItemIndex + 1] = movedItem;\n                    list[selectedItemIndex] = temp;\n                } else {\n                    break;\n                }\n            }\n\n            if (this.dragdrop && ((this.filterValueSource && listType === this.SOURCE_LIST) || (this.filterValueTarget && listType === this.TARGET_LIST))) this.filter(list, listType);\n\n            this.movedDown = true;\n            this.reorderedListElement = listElement;\n            callback.emit({ items: selectedItems });\n            this.triggerChangeDetection();\n        }\n    }\n\n    moveBottom(listElement: any, list: any[], selectedItems: any[], callback: EventEmitter<any>, listType: number) {\n        if (selectedItems && selectedItems.length) {\n            selectedItems = this.sortByIndexInList(selectedItems, list);\n            for (let i = selectedItems.length - 1; i >= 0; i--) {\n                let selectedItem = selectedItems[i];\n                let selectedItemIndex: number = findIndexInList(selectedItem, list);\n\n                if (selectedItemIndex != list.length - 1) {\n                    let movedItem = list.splice(selectedItemIndex, 1)[0];\n                    list.push(movedItem);\n                } else {\n                    break;\n                }\n            }\n\n            if (this.dragdrop && ((this.filterValueSource && listType === this.SOURCE_LIST) || (this.filterValueTarget && listType === this.TARGET_LIST))) this.filter(list, listType);\n\n            listElement.scrollTop = listElement.scrollHeight;\n            callback.emit({ items: selectedItems });\n            this.triggerChangeDetection();\n        }\n    }\n\n    moveRight() {\n        if (this.selectedItemsSource && this.selectedItemsSource.length) {\n            let itemsToMove = [...this.selectedItemsSource];\n            for (let i = 0; i < itemsToMove.length; i++) {\n                let selectedItem = itemsToMove[i];\n                if (findIndexInList(selectedItem, this.target) == -1) {\n                    this.target?.push(this.source?.splice(findIndexInList(selectedItem, this.source), 1)[0]);\n\n                    if (this.visibleOptionsSource?.includes(selectedItem)) {\n                        this.visibleOptionsSource.splice(findIndexInList(selectedItem, this.visibleOptionsSource), 1);\n                    }\n                }\n            }\n\n            this.onMoveToTarget.emit({\n                items: itemsToMove\n            });\n\n            if (this.keepSelection) {\n                this.selectedItemsTarget = [...this.selectedItemsTarget, ...itemsToMove];\n            }\n\n            itemsToMove = [];\n            this.selectedItemsSource = [];\n\n            if (this.filterValueTarget) {\n                this.filter(<any[]>this.target, this.TARGET_LIST);\n            }\n            this.triggerChangeDetection();\n        }\n    }\n\n    moveAllRight() {\n        if (this.source) {\n            let movedItems = [];\n\n            for (let i = 0; i < this.source.length; i++) {\n                if (this.isItemVisible(this.source[i], this.SOURCE_LIST)) {\n                    let removedItem = this.source.splice(i, 1)[0];\n                    this.target?.push(removedItem);\n                    movedItems.push(removedItem);\n                    i--;\n                }\n            }\n            this.onMoveAllToTarget.emit({\n                items: movedItems\n            });\n\n            if (this.keepSelection) {\n                this.selectedItemsTarget = [...this.selectedItemsTarget, ...this.selectedItemsSource];\n            }\n\n            this.selectedItemsSource = [];\n\n            if (this.filterValueTarget) {\n                this.filter(<any[]>this.target, this.TARGET_LIST);\n            }\n\n            this.visibleOptionsSource = [];\n            this.triggerChangeDetection();\n        }\n    }\n\n    moveLeft() {\n        if (this.selectedItemsTarget && this.selectedItemsTarget.length) {\n            let itemsToMove = [...this.selectedItemsTarget];\n            for (let i = 0; i < itemsToMove.length; i++) {\n                let selectedItem = itemsToMove[i];\n                if (findIndexInList(selectedItem, this.source) == -1) {\n                    this.source?.push(this.target?.splice(findIndexInList(selectedItem, this.target), 1)[0]);\n\n                    if (this.visibleOptionsTarget?.includes(selectedItem)) {\n                        this.visibleOptionsTarget.splice(findIndexInList(selectedItem, this.visibleOptionsTarget), 1)[0];\n                    }\n                }\n            }\n\n            this.onMoveToSource.emit({\n                items: itemsToMove\n            });\n\n            if (this.keepSelection) {\n                this.selectedItemsSource = [...this.selectedItemsSource, itemsToMove];\n            }\n\n            itemsToMove = [];\n            this.selectedItemsTarget = [];\n\n            if (this.filterValueSource) {\n                this.filter(<any[]>this.source, this.SOURCE_LIST);\n            }\n            this.triggerChangeDetection();\n        }\n    }\n\n    moveAllLeft() {\n        if (this.target) {\n            let movedItems = [];\n\n            for (let i = 0; i < this.target.length; i++) {\n                if (this.isItemVisible(this.target[i], this.TARGET_LIST)) {\n                    let removedItem = this.target.splice(i, 1)[0];\n                    this.source?.push(removedItem);\n                    movedItems.push(removedItem);\n                    i--;\n                }\n            }\n\n            this.onMoveAllToSource.emit({\n                items: movedItems\n            });\n\n            if (this.keepSelection) {\n                this.selectedItemsSource = [...this.selectedItemsSource, ...this.selectedItemsTarget];\n            }\n\n            this.selectedItemsTarget = [];\n\n            if (this.filterValueSource) {\n                this.filter(<any[]>this.source, this.SOURCE_LIST);\n            }\n\n            this.visibleOptionsTarget = [];\n            this.triggerChangeDetection();\n        }\n    }\n\n    isSelected(item: any, selectedItems: any[]) {\n        return this.findIndexInList(item, selectedItems) != -1;\n    }\n\n    findIndexInList(item: any, selectedItems: any[]): number {\n        return findIndexInList(item, selectedItems);\n    }\n\n    onDrop(event: CdkDragDrop<string[]>, listType: number) {\n        let isTransfer = event.previousContainer !== event.container;\n        let dropIndexes = this.getDropIndexes(event.previousIndex, event.currentIndex, listType, isTransfer, event.item.data);\n\n        if (listType === this.SOURCE_LIST) {\n            if (isTransfer) {\n                transferArrayItem(event.previousContainer.data, event.container.data, dropIndexes.previousIndex, dropIndexes.currentIndex);\n                let selectedItemIndex = findIndexInList(event.item.data, this.selectedItemsTarget);\n\n                if (selectedItemIndex != -1) {\n                    this.selectedItemsTarget.splice(selectedItemIndex, 1);\n\n                    if (this.keepSelection) {\n                        this.selectedItemsTarget.push(event.item.data);\n                    }\n                }\n\n                if (this.visibleOptionsTarget) this.visibleOptionsTarget.splice(event.previousIndex, 1);\n\n                this.onMoveToSource.emit({ items: [event.item.data] });\n            } else {\n                moveItemInArray(event.container.data, dropIndexes.previousIndex, dropIndexes.currentIndex);\n                this.onSourceReorder.emit({ items: [event.item.data] });\n            }\n\n            if (this.filterValueSource) {\n                this.filter(<any[]>this.source, this.SOURCE_LIST);\n            }\n        } else {\n            if (isTransfer) {\n                transferArrayItem(event.previousContainer.data, event.container.data, dropIndexes.previousIndex, dropIndexes.currentIndex);\n\n                let selectedItemIndex = findIndexInList(event.item.data, this.selectedItemsSource);\n\n                if (selectedItemIndex != -1) {\n                    this.selectedItemsSource.splice(selectedItemIndex, 1);\n\n                    if (this.keepSelection) {\n                        this.selectedItemsTarget.push(event.item.data);\n                    }\n                }\n\n                if (this.visibleOptionsSource) this.visibleOptionsSource.splice(event.previousIndex, 1);\n\n                this.onMoveToTarget.emit({ items: [event.item.data] });\n            } else {\n                moveItemInArray(event.container.data, dropIndexes.previousIndex, dropIndexes.currentIndex);\n                this.onTargetReorder.emit({ items: [event.item.data] });\n            }\n\n            if (this.filterValueTarget) {\n                this.filter(<any[]>this.target, this.TARGET_LIST);\n            }\n        }\n    }\n\n    onListFocus(event, listType) {\n        this.onFocus.emit(event);\n    }\n\n    onListBlur(event, listType) {\n        this.onBlur.emit(event);\n    }\n\n    getListElement(listType: number) {\n        return listType === this.SOURCE_LIST ? this.listViewSourceChild?.el.nativeElement : this.listViewTargetChild?.el.nativeElement;\n    }\n\n    getListItems(listType: number) {\n        let listElemet = this.getListElement(listType);\n\n        return find(listElemet, 'li.p-picklist-item');\n    }\n\n    getLatestSelectedVisibleOptionIndex(visibleList: any[], selectedItems: any[]): number {\n        const latestSelectedItem = [...selectedItems].reverse().find((item) => visibleList.includes(item));\n        return latestSelectedItem !== undefined ? visibleList.indexOf(latestSelectedItem) : -1;\n    }\n\n    getVisibleList(listType: number) {\n        if (listType === this.SOURCE_LIST) {\n            return this.visibleOptionsSource && this.visibleOptionsSource.length > 0 ? this.visibleOptionsSource : this.source && this.source.length > 0 ? this.source : null;\n        }\n\n        return this.visibleOptionsTarget && this.visibleOptionsTarget.length > 0 ? this.visibleOptionsTarget : this.target && this.target.length > 0 ? this.target : null;\n    }\n\n    setSelectionList(listType: number, selectedItems: any[]) {\n        if (listType === this.SOURCE_LIST) {\n            this.selectedItemsSource = selectedItems;\n        } else {\n            this.selectedItemsTarget = selectedItems;\n        }\n    }\n\n    findNextOptionIndex(index: number, listType: number) {\n        const items = this.getListItems(listType);\n\n        const matchedOptionIndex = [...items].findIndex((link: any) => link.id === index);\n\n        return matchedOptionIndex > -1 ? matchedOptionIndex + 1 : 0;\n    }\n\n    findPrevOptionIndex(index: number, listType: number) {\n        const items = this.getListItems(listType);\n        const matchedOptionIndex = [...items].findIndex((link: any) => link.id === index);\n\n        return matchedOptionIndex > -1 ? matchedOptionIndex - 1 : 0;\n    }\n\n    onItemKeyDown(event: Event | any, selectedItems: any[], callback: EventEmitter<any>, listType: number) {\n        switch (event.code) {\n            case 'ArrowDown':\n                this.onArrowDownKey(event, selectedItems, callback, listType);\n                break;\n\n            case 'ArrowUp':\n                this.onArrowUpKey(event, selectedItems, callback, listType);\n                break;\n\n            case 'Home':\n                this.onHomeKey(event, selectedItems, callback, listType);\n                break;\n\n            case 'End':\n                this.onEndKey(event, selectedItems, callback, listType);\n                break;\n\n            case 'Enter':\n                this.onEnterKey(event, selectedItems, callback, listType);\n                break;\n\n            case 'Space':\n                this.onSpaceKey(event, selectedItems, callback, listType);\n                break;\n\n            case 'KeyA':\n                if (event.ctrlKey) {\n                    this.setSelectionList(listType, this.getVisibleList(listType));\n                    callback.emit({ items: selectedItems });\n                    event.preventDefault();\n                }\n\n            default:\n                break;\n        }\n    }\n\n    getFocusedOption(index: number, listType: number) {\n        if (index === -1) return null;\n\n        if (listType === this.SOURCE_LIST) {\n            return this.visibleOptionsSource && this.visibleOptionsSource.length ? this.visibleOptionsSource[index] : this.source && this.source.length ? this.source[index] : null;\n        }\n\n        return this.visibleOptionsTarget && this.visibleOptionsTarget.length ? this.visibleOptionsTarget[index] : this.target && this.target.length ? this.target[index] : null;\n    }\n\n    changeFocusedOptionIndex(index, listType) {\n        const items = this.getListItems(listType);\n        if (items?.length > 0) {\n            let order = index >= items.length ? items.length - 1 : index < 0 ? 0 : index;\n\n            this.focusedOptionIndex = items[order].getAttribute('id');\n            this.focusedOption = this.getFocusedOption(order, listType);\n            this.scrollInView(items[order].getAttribute('id'), listType);\n        }\n    }\n\n    scrollInView(id, listType) {\n        const element = findSingle(this.getListElement(listType), `li[id=\"${id}\"]`);\n\n        if (element) {\n            element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n        }\n    }\n\n    onArrowDownKey(event: Event | any, selectedItems: any[], callback: EventEmitter<any>, listType: number) {\n        const optionIndex = this.findNextOptionIndex(this.focusedOptionIndex, listType);\n\n        this.changeFocusedOptionIndex(optionIndex, listType);\n\n        if (event.shiftKey) {\n            this.onEnterKey(event, selectedItems, callback, listType);\n        }\n\n        event.preventDefault();\n    }\n\n    onArrowUpKey(event: Event | any, selectedItems: any[], callback: EventEmitter<any>, listType: number) {\n        const optionIndex = this.findPrevOptionIndex(this.focusedOptionIndex, listType);\n\n        this.changeFocusedOptionIndex(optionIndex, listType);\n\n        if (event.shiftKey) {\n            this.onEnterKey(event, selectedItems, callback, listType);\n        }\n\n        event.preventDefault();\n    }\n\n    onEnterKey(event: Event | any, selectedItems: any[], callback: EventEmitter<any>, listType: number) {\n        this.onItemClick(event, this.focusedOption, selectedItems, listType, callback);\n        event.preventDefault();\n    }\n\n    onSpaceKey(event: Event | any, selectedItems: any[], callback: EventEmitter<any>, listType: number) {\n        if (event.target.tagName === 'INPUT') return;\n        event.preventDefault();\n\n        if (event.shiftKey && selectedItems && selectedItems.length > 0) {\n            let visibleList = this.getVisibleList(listType);\n            let lastSelectedIndex = this.getLatestSelectedVisibleOptionIndex(visibleList, selectedItems);\n\n            if (lastSelectedIndex !== -1) {\n                let focusedIndex = findIndexInList(this.focusedOption, visibleList);\n\n                selectedItems = [...visibleList.slice(Math.min(lastSelectedIndex, focusedIndex), Math.max(lastSelectedIndex, focusedIndex) + 1)];\n                this.setSelectionList(listType, selectedItems);\n\n                callback.emit({ items: selectedItems });\n                return;\n            }\n        }\n\n        this.onEnterKey(event, selectedItems, callback, listType);\n    }\n\n    onHomeKey(event: Event | any, selectedItems: any[], callback: EventEmitter<any>, listType: number) {\n        if (event.ctrlKey && event.shiftKey) {\n            let visibleList = this.getVisibleList(listType);\n            let focusedIndex = findIndexInList(this.focusedOption, visibleList);\n\n            selectedItems = [...visibleList.slice(0, focusedIndex + 1)];\n            this.setSelectionList(listType, selectedItems);\n            callback.emit({ items: selectedItems });\n        } else {\n            this.changeFocusedOptionIndex(0, listType);\n        }\n\n        event.preventDefault();\n    }\n\n    onEndKey(event: Event | any, selectedItems: any[], callback: EventEmitter<any>, listType: number) {\n        let visibleList = this.getVisibleList(listType);\n        let lastIndex = visibleList && visibleList.length > 0 ? visibleList.length - 1 : null;\n        if (lastIndex === null) return;\n\n        if (event.ctrlKey && event.shiftKey) {\n            let focusedIndex = findIndexInList(this.focusedOption, visibleList);\n            selectedItems = [...visibleList.slice(focusedIndex, lastIndex)];\n\n            this.setSelectionList(listType, selectedItems);\n            callback.emit({ items: selectedItems });\n        } else {\n            this.changeFocusedOptionIndex(lastIndex, listType);\n        }\n\n        event.preventDefault();\n    }\n\n    getDropIndexes(fromIndex: number, toIndex: number, droppedList: number, isTransfer: boolean, data: any[] | any) {\n        let previousIndex, currentIndex;\n\n        if (droppedList === this.SOURCE_LIST) {\n            previousIndex = isTransfer ? (this.filterValueTarget ? findIndexInList(data, this.target) : fromIndex) : this.filterValueSource ? findIndexInList(data, this.source) : fromIndex;\n            currentIndex = this.filterValueSource ? this.findFilteredCurrentIndex(<any[]>this.visibleOptionsSource, toIndex, this.source) : toIndex;\n        } else {\n            previousIndex = isTransfer ? (this.filterValueSource ? findIndexInList(data, this.source) : fromIndex) : this.filterValueTarget ? findIndexInList(data, this.target) : fromIndex;\n            currentIndex = this.filterValueTarget ? this.findFilteredCurrentIndex(<any[]>this.visibleOptionsTarget, toIndex, this.target) : toIndex;\n        }\n\n        return { previousIndex, currentIndex };\n    }\n\n    findFilteredCurrentIndex(visibleOptions: any[], index: number, options: any) {\n        if (visibleOptions.length === index) {\n            let toIndex = findIndexInList(visibleOptions[index - 1], options);\n\n            return toIndex + 1;\n        } else {\n            return findIndexInList(visibleOptions[index], options);\n        }\n    }\n\n    resetSourceFilter() {\n        this.visibleOptionsSource = null;\n        this.filterValueSource = null;\n        this.sourceFilterViewChild && ((<HTMLInputElement>this.sourceFilterViewChild.nativeElement).value = '');\n    }\n\n    resetTargetFilter() {\n        this.visibleOptionsTarget = null;\n        this.filterValueTarget = null;\n        this.targetFilterViewChild && ((<HTMLInputElement>this.targetFilterViewChild.nativeElement).value = '');\n    }\n\n    resetFilter() {\n        this.resetSourceFilter();\n        this.resetTargetFilter();\n    }\n\n    initMedia() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.media = this.document.defaultView.matchMedia(`(max-width: ${this.breakpoint})`);\n            this.viewChanged = this.media.matches;\n            this.bindMediaChangeListener();\n        }\n    }\n\n    destroyMedia() {\n        this.unbindMediaChangeListener();\n    }\n\n    bindMediaChangeListener() {\n        if (this.media && !this.mediaChangeListener) {\n            this.mediaChangeListener = this.renderer.listen(this.media, 'change', (event) => {\n                this.viewChanged = event.matches;\n\n                this.cd.markForCheck();\n            });\n        }\n    }\n\n    unbindMediaChangeListener() {\n        if (this.mediaChangeListener) {\n            this.mediaChangeListener();\n            this.mediaChangeListener = null;\n        }\n    }\n\n    createStyle() {\n        if (isPlatformBrowser(this.platformId)) {\n            if (!this.styleElement) {\n                this.renderer.setAttribute(this.el.nativeElement.children[0], this.id, '');\n                this.styleElement = this.renderer.createElement('style');\n                this.renderer.setAttribute(this.styleElement, 'type', 'text/css');\n                this.renderer.appendChild(this.document.head, this.styleElement);\n\n                let innerHTML = `\n                @media screen and (max-width: ${this.breakpoint}) {\n                    .p-picklist[${this.id}] {\n                        flex-direction: column;\n                    }\n\n                    .p-picklist[${this.id}] .p-picklist-controls {\n                        flex-direction: row;\n                    }\n                }`;\n\n                this.renderer.setProperty(this.styleElement, 'innerHTML', innerHTML);\n                setAttribute(this.styleElement, 'nonce', this.config?.csp()?.nonce);\n            }\n        }\n    }\n\n    sourceMoveDisabled() {\n        if (this.disabled || !this.selectedItemsSource.length) {\n            return true;\n        }\n    }\n\n    targetMoveDisabled() {\n        if (this.disabled || !this.selectedItemsTarget.length) {\n            return true;\n        }\n    }\n\n    moveRightDisabled() {\n        return this.disabled || isEmpty(this.selectedItemsSource);\n    }\n\n    moveLeftDisabled() {\n        return this.disabled || isEmpty(this.selectedItemsTarget);\n    }\n\n    moveAllRightDisabled() {\n        return this.disabled || isEmpty(this.source);\n    }\n\n    moveAllLeftDisabled() {\n        return this.disabled || isEmpty(this.target);\n    }\n\n    destroyStyle() {\n        if (this.styleElement) {\n            this.renderer.removeChild(this.document.head, this.styleElement);\n            this.styleElement = null;\n            ``;\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroyStyle();\n        this.destroyMedia();\n        super.ngOnDestroy();\n    }\n}\n\n@NgModule({\n    imports: [PickList, SharedModule],\n    exports: [PickList, SharedModule]\n})\nexport class PickListModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}