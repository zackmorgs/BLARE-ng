{"version":3,"file":"primeng-progressspinner.mjs","sources":["../../src/progressspinner/style/progressspinnerstyle.ts","../../src/progressspinner/progressspinner.ts","../../src/progressspinner/primeng-progressspinner.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BaseStyle } from 'primeng/base';\n\nconst theme = ({ dt }) => `\n.p-progressspinner {\n    position: relative;\n    margin: 0 auto;\n    width: 100px;\n    height: 100px;\n    display: inline-block;\n}\n\n.p-progressspinner::before {\n    content: \"\";\n    display: block;\n    padding-top: 100%;\n}\n\n.p-progressspinner-spin {\n    height: 100%;\n    transform-origin: center center;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    margin: auto;\n    animation: p-progressspinner-rotate 2s linear infinite;\n}\n\n.p-progressspinner-circle {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: 0;\n    stroke: ${dt('progressspinner.colorOne')};\n    animation: p-progressspinner-dash 1.5s ease-in-out infinite, p-progressspinner-color 6s ease-in-out infinite;\n    stroke-linecap: round;\n}\n\n@keyframes p-progressspinner-rotate {\n    100% {\n        transform: rotate(360deg);\n    }\n}\n@keyframes p-progressspinner-dash {\n    0% {\n        stroke-dasharray: 1, 200;\n        stroke-dashoffset: 0;\n    }\n    50% {\n        stroke-dasharray: 89, 200;\n        stroke-dashoffset: -35px;\n    }\n    100% {\n        stroke-dasharray: 89, 200;\n        stroke-dashoffset: -124px;\n    }\n}\n@keyframes p-progressspinner-color {\n    100%,\n    0% {\n        stroke: ${dt('progressspinner.colorOne')};\n    }\n    40% {\n        stroke: ${dt('progressspinner.colorTwo')};\n    }\n    66% {\n        stroke: ${dt('progressspinner.colorThree')};\n    }\n    80%,\n    90% {\n        stroke: ${dt('progressspinner.colorFour')};\n    }\n}\n`;\n\nconst classes = {\n    root: 'p-progressspinner',\n    spin: 'p-progressspinner-spin',\n    circle: 'p-progressspinner-circle'\n};\n\n@Injectable()\nexport class ProgressSpinnerStyle extends BaseStyle {\n    name = 'progressspinner';\n\n    theme = theme;\n\n    classes = classes;\n}\n\n/**\n *\n * ProgressSpinner is a process status indicator.\n *\n * [Live Demo](https://www.primeng.org/progressspinner)\n *\n * @module progressspinnerstyle\n *\n */\nexport enum ProgressSpinnerClasses {\n    /**\n     * Class name of the root element\n     */\n    root = 'p-progressspinner',\n    /**\n     * Class name of the spin element\n     */\n    spin = 'p-progressspinner-spin',\n    /**\n     * Class name of the circle element\n     */\n    circle = 'p-progressspinner-circle'\n}\n\nexport interface ProgressSpinnerStyle extends BaseStyle {}\n","import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject, Input, NgModule, ViewEncapsulation } from '@angular/core';\nimport { SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { ProgressSpinnerStyle } from './style/progressspinnerstyle';\n\n/**\n * ProgressSpinner is a process status indicator.\n * @group Components\n */\n@Component({\n    selector: 'p-progressSpinner, p-progress-spinner, p-progressspinner',\n    standalone: true,\n    imports: [CommonModule, SharedModule],\n    template: `\n        <div class=\"p-progressspinner\" [ngStyle]=\"style\" [ngClass]=\"styleClass\" role=\"progressbar\" [attr.aria-label]=\"ariaLabel\" [attr.aria-busy]=\"true\" [attr.data-pc-name]=\"'progressspinner'\" [attr.data-pc-section]=\"'root'\">\n            <svg class=\"p-progressspinner-spin\" viewBox=\"25 25 50 50\" [style.animation-duration]=\"animationDuration\" [attr.data-pc-section]=\"'root'\">\n                <circle class=\"p-progressspinner-circle\" cx=\"50\" cy=\"50\" r=\"20\" [attr.fill]=\"fill\" [attr.stroke-width]=\"strokeWidth\" stroke-miterlimit=\"10\" />\n            </svg>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [ProgressSpinnerStyle]\n})\nexport class ProgressSpinner extends BaseComponent {\n    /**\n     * Class of the element.\n     * @group Props\n     */\n    @Input() styleClass: string | undefined;\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    @Input() style: { [klass: string]: any } | null | undefined;\n    /**\n     * Width of the circle stroke.\n     * @group Props\n     */\n    @Input() strokeWidth: string = '2';\n    /**\n     * Color for the background of the circle.\n     * @group Props\n     */\n    @Input() fill: string = 'none';\n    /**\n     * Duration of the rotate animation.\n     * @group Props\n     */\n    @Input() animationDuration: string = '2s';\n    /**\n     * Used to define a aria label attribute the current element.\n     * @group Props\n     */\n    @Input() ariaLabel: string | undefined;\n\n    _componentStyle = inject(ProgressSpinnerStyle);\n}\n\n@NgModule({\n    imports: [ProgressSpinner, SharedModule],\n    exports: [ProgressSpinner, SharedModule]\n})\nexport class ProgressSpinnerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;AAGA,MAAM,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cA+BZ,EAAE,CAAC,0BAA0B,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;kBA2B1B,EAAE,CAAC,0BAA0B,CAAC,CAAA;;;kBAG9B,EAAE,CAAC,0BAA0B,CAAC,CAAA;;;kBAG9B,EAAE,CAAC,4BAA4B,CAAC,CAAA;;;;kBAIhC,EAAE,CAAC,2BAA2B,CAAC,CAAA;;;CAGhD;AAED,MAAM,OAAO,GAAG;AACZ,IAAA,IAAI,EAAE,mBAAmB;AACzB,IAAA,IAAI,EAAE,wBAAwB;AAC9B,IAAA,MAAM,EAAE;CACX;AAGK,MAAO,oBAAqB,SAAQ,SAAS,CAAA;IAC/C,IAAI,GAAG,iBAAiB;IAExB,KAAK,GAAG,KAAK;IAEb,OAAO,GAAG,OAAO;wGALR,oBAAoB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA;4GAApB,oBAAoB,EAAA,CAAA;;4FAApB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBADhC;;AASD;;;;;;;;AAQG;IACS;AAAZ,CAAA,UAAY,sBAAsB,EAAA;AAC9B;;AAEG;AACH,IAAA,sBAAA,CAAA,MAAA,CAAA,GAAA,mBAA0B;AAC1B;;AAEG;AACH,IAAA,sBAAA,CAAA,MAAA,CAAA,GAAA,wBAA+B;AAC/B;;AAEG;AACH,IAAA,sBAAA,CAAA,QAAA,CAAA,GAAA,0BAAmC;AACvC,CAAC,EAbW,sBAAsB,KAAtB,sBAAsB,GAajC,EAAA,CAAA,CAAA;;AC3GD;;;AAGG;AAgBG,MAAO,eAAgB,SAAQ,aAAa,CAAA;AAC9C;;;AAGG;AACM,IAAA,UAAU;AACnB;;;AAGG;AACM,IAAA,KAAK;AACd;;;AAGG;IACM,WAAW,GAAW,GAAG;AAClC;;;AAGG;IACM,IAAI,GAAW,MAAM;AAC9B;;;AAGG;IACM,iBAAiB,GAAW,IAAI;AACzC;;;AAGG;AACM,IAAA,SAAS;AAElB,IAAA,eAAe,GAAG,MAAM,CAAC,oBAAoB,CAAC;wGAhCrC,eAAe,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA;AAAf,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,eAAe,EAFb,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,0DAAA,EAAA,MAAA,EAAA,EAAA,UAAA,EAAA,YAAA,EAAA,KAAA,EAAA,OAAA,EAAA,WAAA,EAAA,aAAA,EAAA,IAAA,EAAA,MAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,SAAA,EAAA,CAAC,oBAAoB,CAAC,EATvB,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA;;;;;;KAMT,EAPS,QAAA,EAAA,IAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,YAAY,iNAAE,YAAY,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA;;4FAY3B,eAAe,EAAA,UAAA,EAAA,CAAA;kBAf3B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,0DAA0D;AACpE,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;AACrC,oBAAA,QAAQ,EAAE;;;;;;AAMT,IAAA,CAAA;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,SAAS,EAAE,CAAC,oBAAoB;AACnC,iBAAA;8BAMY,UAAU,EAAA,CAAA;sBAAlB;gBAKQ,KAAK,EAAA,CAAA;sBAAb;gBAKQ,WAAW,EAAA,CAAA;sBAAnB;gBAKQ,IAAI,EAAA,CAAA;sBAAZ;gBAKQ,iBAAiB,EAAA,CAAA;sBAAzB;gBAKQ,SAAS,EAAA,CAAA;sBAAjB;;MASQ,qBAAqB,CAAA;wGAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA;AAArB,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,YAvCrB,eAAe,EAoCG,YAAY,CApC9B,EAAA,OAAA,EAAA,CAAA,eAAe,EAqCG,YAAY,CAAA,EAAA,CAAA;AAE9B,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,EAHpB,OAAA,EAAA,CAAA,eAAe,EAAE,YAAY,EACZ,YAAY,CAAA,EAAA,CAAA;;4FAE9B,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAJjC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,OAAO,EAAE,CAAC,eAAe,EAAE,YAAY,CAAC;AACxC,oBAAA,OAAO,EAAE,CAAC,eAAe,EAAE,YAAY;AAC1C,iBAAA;;;AC/DD;;AAEG;;;;"}