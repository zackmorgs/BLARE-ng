import { BaseStyle } from 'primeng/base';
import * as i0 from "@angular/core";
export declare class DrawerStyle extends BaseStyle {
    name: string;
    theme: ({ dt }: {
        dt: any;
    }) => string;
    classes: {
        mask: ({ instance }: {
            instance: any;
        }) => {
            [x: string]: any;
            'p-drawer-mask': boolean;
            'p-overlay-mask p-overlay-mask-enter': any;
            'p-drawer-open': any;
            'p-drawer-full': any;
        };
        root: ({ instance }: {
            instance: any;
        }) => {
            'p-drawer p-component': boolean;
            'p-drawer-full': any;
        };
        header: string;
        title: string;
        pcCloseButton: string;
        content: string;
        footer: string;
    };
    inlineStyles: {
        mask: ({ instance }: {
            instance: any;
        }) => {
            position: string;
            height: string;
            width: string;
            left: number;
            top: number;
            display: string;
            flexDirection: string;
            alignItems: string;
        };
    };
    static ɵfac: i0.ɵɵFactoryDeclaration<DrawerStyle, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<DrawerStyle>;
}
/**
 *
 * Drawer is a panel component displayed as an overlay at the edges of the screen.
 *
 * [Live Demo](https://www.primeng.org/drawer)
 *
 * @module drawerstyle
 *
 */
export declare enum DrawerClasses {
    /**
     * Class name of the mask element
     */
    mask = "p-drawer-mask",
    /**
     * Class name of the root element
     */
    root = "p-drawer",
    /**
     * Class name of the header element
     */
    header = "p-drawer-header",
    /**
     * Class name of the title element
     */
    title = "p-drawer-title",
    /**
     * Class name of the close button element
     */
    pcCloseButton = "p-drawer-close-button",
    /**
     * Class name of the content element
     */
    content = "p-drawer-content"
}
export interface DrawerStyle extends BaseStyle {
}
