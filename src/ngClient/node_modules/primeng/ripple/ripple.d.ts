import { AfterViewInit, NgZone, OnDestroy } from '@angular/core';
import { BaseComponent } from 'primeng/basecomponent';
import { VoidListener } from 'primeng/ts-helpers';
import { RippleStyle } from './style/ripplestyle';
import * as i0 from "@angular/core";
/**
 * Ripple directive adds ripple effect to the host element.
 * @group Components
 */
export declare class Ripple extends BaseComponent implements AfterViewInit, OnDestroy {
    zone: NgZone;
    _componentStyle: RippleStyle;
    animationListener: VoidListener;
    mouseDownListener: VoidListener;
    timeout: any;
    constructor();
    ngAfterViewInit(): void;
    onMouseDown(event: MouseEvent): void;
    getInk(): any;
    resetInk(): void;
    onAnimationEnd(event: Event): void;
    create(): void;
    remove(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<Ripple, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<Ripple, "[pRipple]", never, {}, {}, never, never, true, never>;
}
export declare class RippleModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<RippleModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<RippleModule, never, [typeof Ripple], [typeof Ripple]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<RippleModule>;
}
