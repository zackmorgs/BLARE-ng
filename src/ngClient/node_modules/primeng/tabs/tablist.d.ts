import { AfterContentInit, AfterViewInit, ElementRef, QueryList, TemplateRef } from '@angular/core';
import { PrimeTemplate } from 'primeng/api';
import { BaseComponent } from 'primeng/basecomponent';
import * as i0 from "@angular/core";
/**
 * TabList is a helper component for Tabs component.
 * @group Components
 */
export declare class TabList extends BaseComponent implements AfterViewInit, AfterContentInit {
    /**
     * A template reference variable that represents the previous icon in a UI component.
     * @type {TemplateRef<any> | undefined}
     * @group Templates
     */
    prevIconTemplate: TemplateRef<any> | undefined;
    /**
     * A template reference variable that represents the next icon in a UI component.
     * @type {TemplateRef<any> | undefined}
     * @group Templates
     */
    nextIconTemplate: TemplateRef<any> | undefined;
    templates: QueryList<PrimeTemplate> | undefined;
    content: ElementRef<HTMLDivElement>;
    prevButton: ElementRef<HTMLButtonElement>;
    nextButton: ElementRef<HTMLButtonElement>;
    inkbar: ElementRef<HTMLSpanElement>;
    tabs: ElementRef<HTMLDivElement>;
    pcTabs: any;
    isPrevButtonEnabled: import("@angular/core").WritableSignal<boolean>;
    isNextButtonEnabled: import("@angular/core").WritableSignal<boolean>;
    resizeObserver: ResizeObserver;
    showNavigators: import("@angular/core").Signal<any>;
    tabindex: import("@angular/core").Signal<any>;
    scrollable: import("@angular/core").Signal<any>;
    constructor();
    get prevButtonAriaLabel(): string;
    get nextButtonAriaLabel(): string;
    ngAfterViewInit(): void;
    _prevIconTemplate: TemplateRef<any> | undefined;
    _nextIconTemplate: TemplateRef<any> | undefined;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    onScroll(event: Event): void;
    onPrevButtonClick(): void;
    onNextButtonClick(): void;
    updateButtonState(): void;
    updateInkBar(): void;
    getVisibleButtonWidths(): number;
    bindResizeObserver(): void;
    unbindResizeObserver(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TabList, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TabList, "p-tablist", never, {}, {}, ["prevIconTemplate", "nextIconTemplate", "templates"], ["*"], true, never>;
}
