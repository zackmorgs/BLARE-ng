import { BaseComponent } from 'primeng/basecomponent';
import { TabsStyle } from './style/tabsstyle';
import * as i0 from "@angular/core";
import * as i1 from "./tabpanels";
import * as i2 from "./tabpanel";
import * as i3 from "./tablist";
import * as i4 from "./tab";
/**
 * Tabs facilitates seamless switching between different views.
 * @group Components
 */
export declare class Tabs extends BaseComponent {
    /**
     * Value of the active tab.
     * @defaultValue undefined
     * @group Props
     */
    value: import("@angular/core").ModelSignal<string | number>;
    /**
     * When specified, enables horizontal and/or vertical scrolling.
     * @type boolean
     * @defaultValue false
     * @group Props
     */
    scrollable: import("@angular/core").InputSignalWithTransform<boolean, unknown>;
    /**
     * When enabled, hidden tabs are not rendered at all. Defaults to false that hides tabs with css.
     * @type boolean
     * @defaultValue false
     * @group Props
     */
    lazy: import("@angular/core").InputSignalWithTransform<boolean, unknown>;
    /**
     * When enabled, the focused tab is activated.
     * @type boolean
     * @defaultValue false
     * @group Props
     */
    selectOnFocus: import("@angular/core").InputSignalWithTransform<boolean, unknown>;
    /**
     * Whether to display navigation buttons in container when scrollable is enabled.
     * @type boolean
     * @defaultValue true
     * @group Props
     */
    showNavigators: import("@angular/core").InputSignalWithTransform<boolean, unknown>;
    /**
     * Tabindex of the tab buttons.
     * @type number
     * @defaultValue 0
     * @group Props
     */
    tabindex: import("@angular/core").InputSignalWithTransform<number, unknown>;
    id: import("@angular/core").WritableSignal<string>;
    _componentStyle: TabsStyle;
    updateValue(newValue: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<Tabs, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<Tabs, "p-tabs", never, { "value": { "alias": "value"; "required": false; "isSignal": true; }; "scrollable": { "alias": "scrollable"; "required": false; "isSignal": true; }; "lazy": { "alias": "lazy"; "required": false; "isSignal": true; }; "selectOnFocus": { "alias": "selectOnFocus"; "required": false; "isSignal": true; }; "showNavigators": { "alias": "showNavigators"; "required": false; "isSignal": true; }; "tabindex": { "alias": "tabindex"; "required": false; "isSignal": true; }; }, { "value": "valueChange"; }, never, ["*"], true, never>;
}
export declare class TabsModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<TabsModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<TabsModule, never, [typeof Tabs, typeof i1.TabPanels, typeof i2.TabPanel, typeof i3.TabList, typeof i4.Tab], [typeof Tabs, typeof i1.TabPanels, typeof i2.TabPanel, typeof i3.TabList, typeof i4.Tab]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<TabsModule>;
}
